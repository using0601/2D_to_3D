Generate multivew pointcloud:

    step1: emc --data config/datasets/mvimage.yml --exp config/mv1p/detect_triangulate_fitSMPL.yml --root data/examples/street_dance --subs_vis 07 01 05 03 --out output/street__dance
            ==> smpl vis_render generated in /output

           For ZJU:
           emc --data config/datasets/mvimage.yml --exp config/mv1p/detect_triangulate_fitSMPL.yml --root data/examples/ZJU --subs_vis Camera_B1 --subs Camera_B1 Camera_B5 Camera_B10 Camera_B15 Camera_B20 Camera_B23
#################################################################################################
    step2: mkdir -p boxing/output-smpl-3d
           mkdir -p smpls/output-smpl-3d

    step3: cp -r output/detect_triangulate_fitSMPL/smpl boxing/output-smpl-3d
           
           cp -r output/detect_triangulate_fitSMPL/smpl smpls/ZJU  
#################################################################################################
    step4: python3 apps/postprocess/write_vertices.py boxing/output-smpl-3d/smpl boxing/output-smpl-3d/vertices --cfg_model config/model/smpl.yml --mode vertices
            ==> pointcloud generated (json format)

            python3 apps/postprocess/write_vertices.py output/ZJU_comap/smpl output/ZJU_comap/vertices --cfg_model config/model/smpl.yml --mode vertices

    step5: Use json2ply.py to transform pointcloud 
    step5: python json2ply.py 

    1.單一視角 影片、相機參數  輸出SMPL(shape已經有了, 求pose) -> 連續pointcloud (有固定編號)
    2.多個視角 影像 (image+相機參數) (多試幾個時間點) (解出身高等...(shape)) 

